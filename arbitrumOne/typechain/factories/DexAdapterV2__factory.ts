/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DexAdapterV2, DexAdapterV2Interface } from "../DexAdapterV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WNAtive",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "dexType",
        type: "uint256",
      },
    ],
    name: "DexTypeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "quoter",
        type: "address",
      },
    ],
    name: "QuoterChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "WNative",
    outputs: [
      {
        internalType: "contract IWNative",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dexType",
    outputs: [
      {
        internalType: "enum IDexAdapter.DexType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountInByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
        ],
        internalType: "struct IDexAdapter.AmountParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountOutByMegaRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsInByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.GetAmountsParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByPaths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOutByRoutes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dexRouter",
        type: "address",
      },
    ],
    name: "getGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_primexDNS",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenA",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "dexName",
                        type: "string",
                      },
                      {
                        internalType: "uint256",
                        name: "shares",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct PrimexPricingLibrary.Path[]",
                    name: "paths",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct PrimexPricingLibrary.Route[]",
                name: "routes",
                type: "tuple[]",
              },
            ],
            internalType: "struct PrimexPricingLibrary.MegaRoute[]",
            name: "megaRoutes",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct PrimexPricingLibrary.MegaSwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "performMegaRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "dexName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Path[]",
        name: "paths",
        type: "tuple[]",
      },
    ],
    name: "performPathsSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "dexName",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "shares",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
            ],
            internalType: "struct PrimexPricingLibrary.Path[]",
            name: "paths",
            type: "tuple[]",
          },
        ],
        internalType: "struct PrimexPricingLibrary.Route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "performRoutesSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "primexDNS",
    outputs: [
      {
        internalType: "contract IPrimexDNSV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dexType",
        type: "uint256",
      },
    ],
    name: "setDexType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dexRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoter",
        type: "address",
      },
    ],
    name: "setQuoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedPath",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dexRouter",
            type: "address",
          },
        ],
        internalType: "struct IDexAdapter.SwapParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "testUpgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604090808252346200016d578181620052b2803803809162000024828562000172565b8339810103126200016d576200004860206200004083620001ac565b9201620001ac565b82516301ffc9a760e01b8152637965db0b60e01b60048201526001600160a01b0392906020816024818786165afa90811562000162576000916200011a575b501562000109576080521660a052516150f09081620001c28239608051818181610a5c01528181610af101528181610b7f01526110d2015260a051818181610e2a015281816132ec015281816133ec0152818161374f0152818161383b01528181613a1c01528181613b0801528181614bd501528181614d760152614e7b0152f35b835163044aa57560e41b8152600490fd5b6020813d821162000159575b81620001356020938362000172565b810103126200015557519081151582036200015257503862000087565b80fd5b5080fd5b3d915062000126565b85513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200019657604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016d5756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a7146101ab5780631f5f4cbe146101a65780633396c1ba146101a157806336dd6b3d1461019c5780633c9c6ff3146101975780633f4a2d27146101925780633fa4f2451461018d57806340fce5d114610188578063461dfcd5146101835780634c828b5c1461017e57806355241077146101795780635933dd2b146101745780636264257a1461016f5780637b1039991461016a5780638677f6361461016557806396954fb9146101605780639d6aed0b1461015b578063c2909fed14610156578063c4d66de814610151578063eb5251a51461014c578063f1a3d00514610147578063f3ec43c714610142578063f4ef97ea1461013d578063f6f1c4c4146101385763fae89f920361000e57610f12565b610eaf565b610e59565b610e14565b610e01565b610de8565b610cfb565b610cb2565b610c40565b610bce565b610b20565b610adb565b6109f1565b6109b2565b610999565b61084a565b610800565b61073f565b610721565b6106f8565b6106d4565b610642565b610470565b610447565b346102015760203660031901126102015760043563ffffffff60e01b8116809103610201576020906301ffc9a760e01b81149081156101f0575b506040519015158152f35b633603f73360e21b149050386101e5565b600080fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761023757604052565b610206565b6001600160401b03811161023757604052565b604081019081106001600160401b0382111761023757604052565b90601f801991011681019081106001600160401b0382111761023757604052565b6040519061010082018281106001600160401b0382111761023757604052565b60405190608082018281106001600160401b0382111761023757604052565b6040519060a082018281106001600160401b0382111761023757604052565b6040519060c082018281106001600160401b0382111761023757604052565b604051906103158261021c565b565b6001600160401b03811161023757601f01601f191660200190565b92919261033e82610317565b9161034c604051938461026a565b829481845281830111610201578281602093846000960137010152565b9080601f830112156102015781602061038493359101610332565b90565b6001600160a01b0381160361020157565b359061031582610387565b60031990602081830112610201576004356001600160401b039283821161020157606090828403011261020157604051926103dd8461021c565b81600401359081116102015760449260046103fa92840101610369565b835260248101356020840152013561041181610387565b604082015290565b6060810192916000915b6003831061043057505050565b600190825181526020809101920192019190610423565b346102015761046c61046061045b366103a3565b611e30565b60405191829182610419565b0390f35b6003196020368201811361020157600435906001600160401b0382116102015760c08260040193833603011261020157906104b14260a48301351015614edf565b6104b96112aa565b90606481019060005b6104cc8387611309565b905081101561050457806104f86104f06104ff936104ea878b611309565b90611354565b358651611389565b85526112f5565b6104c2565b5083918561051485511515614ef8565b6044830135936060860192858452600093828801976084604082019701955b6105476105408588611309565b9050611396565b8110156105d657806105826105786105706105696105d1956104ea8a8d611309565b358d6113c1565b8551906113d4565b808d5285516113b4565b84526105ca6105c3898d8a6105bb6105b2876104ea8d6105ac6105a4876113f4565b9751986113f4565b95611309565b8c810190611309565b939092611534565b8a51611389565b89526112f5565b610533565b61046c8861062e6106278a87896105bb8c61061e8f6105ff6105f7826113f4565b9651976113f4565b946106186105406106108385611309565b939094611309565b91611354565b90810190611309565b8251611389565b809152604051918291829190602083019252565b3461020157602036600319011261020157602061066960043561066481610387565b61145b565b604051908152f35b9181601f84011215610201578235916001600160401b038311610201576020808501948460051b01011161020157565b9060406003198301126102015760043591602435906001600160401b038211610201576106d091600401610671565b9091565b346102015760206106696106e7366106a1565b916119c7565b600091031261020157565b34610201576000366003190112610201576003546040516001600160a01b039091168152602090f35b34610201576000366003190112610201576020600454604051908152f35b60031960203682011261020157600435906001600160401b0390818311610201576101009083360301126102015761077561028b565b8260040135918211610201576107f660e461046c9461079d6104609560043691840101610369565b84526107ab60248201610398565b60208501526107bc60448201610398565b604085015260648101356060850152608481013560808501526107e160a48201610398565b60a085015260c481013560c085015201610398565b60e0820152611412565b34610201576020610669610813366106a1565b9161196f565b6003199060208183011261020157600435916001600160401b03831161020157826080920301126102015760040190565b346102015761085836610819565b610861816113f4565b906108946020926108826108768585016113f4565b6001600160a01b031690565b6001600160a01b039091161415614f11565b61089c6112aa565b90606081019060005b6108af8383611309565b90508110156108d257806104f86104f06108cd936104ea8787611309565b6108a5565b509190916108e282511515614ef8565b60408101359260608301928484526000938682019160408101955b61090a6105408688611309565b811015610973578061093d61093361057061092c61096e956104ea8b8d611309565b358c6113c1565b80875285516113b4565b84526109676109608861095a8d61061e866104ea8d8d5196611309565b91611bf6565b8951611389565b88526112f5565b6108fd565b61046c8761062e6106278861095a8e61061e8d8b51946106186105406106108385611309565b3461020157602036600319011261020157600480359055005b346102015760203660031901126102015760206004356109d181610387565b60018060a01b038091166000526002825260406000205416604051908152f35b3461020157604036600319011261020157600435610a0e81610387565b602435610a1a81610387565b604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152916020836044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610ad65761001993610aa391600091610aa8575b50614f2a565b6111a8565b610ac9915060203d8111610acf575b610ac1818361026a565b810190611081565b38610a9d565b503d610ab7565b611099565b34610201576000366003190112610201576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461020157604036600319011261020157600435610b3d81610387565b604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b636004820152336024820152906020826044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610ad65761001992610bc591600091610aa85750614f2a565b60243590611250565b34610201576020610669610be1366106a1565b91611c39565b60005b838110610bfa5750506000910152565b8181015183820152602001610bea565b90602091610c2381518092818552858086019101610be7565b601f01601f1916010190565b906020610384928181520190610c0a565b346102015760003660031901126102015761046c604051610c608161024f565b600c81526b2232bc20b230b83a32b92b1960a11b6020820152604051918291602083526020830190610c0a565b634e487b7160e01b600052602160045260246000fd5b60091115610cad57565b610c8d565b3461020157602036600319011261020157600435610ccf81610387565b60018060a01b0316600052600160205260ff604060002054166040516009821015610cad576020918152f35b3461020157602036600319011261020157600435610d1881610387565b610d5c60005491610d4060ff8460081c161580948195610dda575b8115610dba575b5061101e565b82610d53600160ff196000541617600055565b610da1576110a5565b610d6257005b610d7261ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b610db561010061ff00196000541617600055565b6110a5565b303b15915081610dcc575b5038610d3a565b6001915060ff161438610dc5565b600160ff8216109150610d33565b346102015761046c610460610dfc366103a3565b611b28565b3461020157602061066961095a366106a1565b34610201576000366003190112610201576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b608036600319011261020157600435610e7181610387565b604435610e7d81610387565b606435906001600160401b03821161020157602092610ea3610669933690600401610671565b92909160243590611534565b60a036600319011261020157600435610ec781610387565b602435610ed381610387565b60643591610ee083610387565b608435916001600160401b03831161020157602093610f06610669943690600401610671565b939092604435916116cf565b3461020157610f2036610819565b610f29816113f4565b90610f3e6020926108826108768585016113f4565b610f466112aa565b90606081019060005b610f598383611309565b9050811015610f7c57806104f86104f0610f77936104ea8787611309565b610f4f565b50919091610f8c82511515614ef8565b60408101359260608301928484526000938682019160408101955b610fb46105408688611309565b811015610ff85780610fd661093361057061092c610ff3956104ea8b8d611309565b8452610967610960886108138d61061e866104ea8d8d5196611309565b610fa7565b61046c8761062e610627886108138e61061e8d8b51946106186105406106108385611309565b1561102557565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b90816020910312610201575180151581036102015790565b6040513d6000823e3d90fd5b604051632474521560e21b8152600060048201523360248201526020916001600160a01b039183816044817f000000000000000000000000000000000000000000000000000000000000000087165afa8015610ad65761110c916000916111915750614f2a565b6040516301ffc9a760e01b815263081e57a760e31b6004820152911691908181602481865afa918215610ad657600092611174575b505015611162576bffffffffffffffffffffffff60a01b6003541617600355565b60405163044aa57560e41b8152600490fd5b61118a9250803d10610acf57610ac1818361026a565b3880611141565b610ac99150853d8711610acf57610ac1818361026a565b6001600160a01b038082166000818152600160205260409020549293909260ff166009811015610cad571561123e571691821561122d576001600160a01b0316600090815260026020526040902080546001600160a01b031916831790557feec77f6322aea766aacea41ca79d2615f5301e0edbcf9bfe766a594d9d95e1db600080a3565b60405162310f9160e31b8152600490fd5b604051636afff5ed60e11b8152600490fd5b6001600160a01b03168015611162576009821015610cad57806000526001602052604060002060ff1981541660ff84161790557f7955abe00075979fc908f0d63d8bca5922683856a8270d6ecd19958f3f47c339600080a3565b60405190608082018281106001600160401b038211176102375760405260006060838281528260208201528260408201520152565b634e487b7160e01b600052601160045260246000fd5b60001981146113045760010190565b6112df565b903590601e198136030182121561020157018035906001600160401b03821161020157602001918160051b3603831361020157565b634e487b7160e01b600052603260045260246000fd5b91908110156113765760051b81013590603e1981360301821215610201570190565b61133e565b906001820180921161130457565b9190820180921161130457565b60001981019190821161130457565b60011981019190821161130457565b9190820391821161130457565b8181029291811591840414171561130457565b81156113de570490565b634e487b7160e01b600052601260045260246000fd5b3561038481610387565b6040519061140b8261021c565b6060368337565b60606040516114208161021c565b36903760a08101516001600160a01b031615611162576060810151156114495761038490611efe565b60405163127973e960e31b8152600490fd5b61149890611491906114776001600160a01b0382161515614f43565b6001600160a01b0316600090815260016020526040902090565b5460ff1690565b6114a181610ca3565b600181036114b15750620254e990565b6114ba81610ca3565b600281148015611521575b156114d257506202d0cb90565b6114db81610ca3565b600381036114eb57506202cdce90565b6114f481610ca3565b6004810361150457506203001190565b80611510600692610ca3565b0361151c576204229890565b614fc7565b5061152b81610ca3565b600581146114c5565b91939290936000935b80851061154c57505050505090565b90919293948515156000146115e1576000198601868111611304576115d1916115796115cb928588611354565b3561158381610387565b61158e898689611354565b359161159983610387565b6115a286611396565b8a036115da5786905b6115c36115b98c898c611354565b6020810190611309565b9490936116cf565b956112f5565b9392919061153d565b30906115ab565b6115cb6115d19186611583565b91908110156113765760051b81013590605e1981360301821215610201570190565b6040519061010082018281106001600160401b0382111761023757604052816060815260e06000918260208201528260408201528260608201528260808201528260a08201528260c08201520152565b903590601e198136030182121561020157018035906001600160401b0382116102015760200191813603831361020157565b90816020910312610201575161038481610387565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b9391959490926000968791885b848110611941575061173b906116f38a1515614ef8565b61172b839761171b611703611610565b4260c08201526001600160a01b03909b1660208c0152565b6001600160a01b031660408a0152565b6001600160a01b031660a0880152565b6000945b61174884611396565b861015611871576117836117f3916117778b611772602061176a8c8b8d6115ee565b0135876113c1565b6113d4565b908160608b01526113b4565b926117a661179f61179589888a6115ee565b6040810190611660565b3691610332565b88526003546020906117c0906001600160a01b0316610876565b6117d46117ce8a898b6115ee565b80611660565b60405163657dcce560e01b8152958693928492839291600484016116a7565b03915afa908115610ad6576118226115cb9261183b94600091611842575b506001600160a01b031660e08b0152565b61183461182e8a611efe565b60200190565b5190611389565b949161173f565b611864915060203d60201161186a575b61185c818361026a565b810190611692565b38611811565b503d611852565b6118cc92969798506118eb95506117ce91509360209460608901526118a561179f61179561189e87611396565b87856115ee565b88526003546118bc906001600160a01b0316610876565b936118c681611396565b916115ee565b60405163657dcce560e01b8152948593928492839291600484016116a7565b03915afa8015610ad6576103849361191d61182e9261183494600091611922575b506001600160a01b031660e0830152565b611efe565b61193b915060203d60201161186a5761185c818361026a565b3861190c565b986119616119679160206119598d898b9c999c6115ee565b013590611389565b996112f5565b9592956116dc565b91906000915b8083106119825750505090565b90919261199a6119a0916106e76115b9878688611354565b936112f5565b9190611975565b604051906119b48261021c565b6000604083606081528260208201520152565b9092916000938491855b818110611b0857506119e4861515614ef8565b83926119ee6119a7565b946000945b6119fc84611396565b861015611a8b57611783611a2a91611a1e8b611772602061176a8c8b8d6115ee565b908160208b01526113b4565b03915afa908115610ad657611a596115cb92611a6594600091611a6c575b506001600160a01b031660408b0152565b61183461182e8a611b28565b94916119f3565b611a85915060203d60201161186a5761185c818361026a565b38611a48565b6118cc9296979850611ab795506117ce915093602094858901526118a561179f61179561189e87611396565b03915afa8015610ad65761038493610dfc61182e9261183494600091611ae9575b506001600160a01b03166040830152565b611b02915060203d60201161186a5761185c818361026a565b38611ad8565b95611b1d611b239160206119598a86886115ee565b966112f5565b6119d1565b611b306113fe565b50611b3a81613036565b6040810151611b5590611491906001600160a01b0316611477565b611b5e81610ca3565b600181148015611be3575b15611b78575061038490612e3a565b611b8181610ca3565b60028103611b9357506103849061278b565b611b9c81610ca3565b60038103611bae575061038490612b50565b611bb781610ca3565b60048103611bc957506103849061235a565b80611bd5600592610ca3565b0361151c57610384906129a8565b50611bed81610ca3565b60068114611b69565b918091825b611c055750505090565b90919260001984019084821161130457610be16115b9611c26938686611354565b9280156113045760001901919082611bfb565b90916000908193825b828110611e0e5750611c55831515614ef8565b8392611c5f6119a7565b9160009360209788850190604094858701985b611c7b85611396565b891015611d7257611cb0611d1091611ca7848f8f611772918f611c9f908d8f6115ee565b0135906113c1565b908187526113b4565b92611ccb61179f611cc28c898b6115ee565b8a810190611660565b89526003548d90611ce4906001600160a01b0316610876565b611cf26117ce8d8a8c6115ee565b8b5163657dcce560e01b8152958693928492839291600484016116a7565b03915afa908115610ad657611d3f611d48928f94611d4e95600092611d55575b50506001600160a01b03168d52565b6118348a611e30565b986112f5565b9791611c72565b611d6b9250803d1061186a5761185c818361026a565b8f80611d30565b6117ce929a508b979850611dc0999b96959150611da593526118a561179f611d9c61189e87611396565b87810190611660565b925180978194829363657dcce560e01b8452600484016116a7565b03915afa8015610ad657610384956118349461045b93600093611def575b50506001600160a01b039091169052565b611e06929350803d1061186a5761185c818361026a565b903880611dde565b949193926115cb611e269160206119598989876115ee565b9492939194611c42565b611e386113fe565b50611e4281613036565b6040810151611e5d90611491906001600160a01b0316611477565b611e6681610ca3565b600181148015611eeb575b15611e80575061038490612ef7565b611e8981610ca3565b60028103611e9b57506103849061286c565b611ea481610ca3565b60038103611eb6575061038490612c7c565b611ebf81610ca3565b60048103611ed157506103849061254e565b80611edd600592610ca3565b0361151c5761038490612a5e565b50611ef581610ca3565b60068114611e71565b611f066113fe565b5060e0810151611f2290611491906001600160a01b0316611477565b611f2b81610ca3565b600181148015611fef575b15611f45575061038490613177565b611f4e81610ca3565b60028103611f60575061038490613556565b611f6981610ca3565b60038103611f7b5750610384906144d6565b611f8481610ca3565b60048103611f9657506103849061498f565b611f9f81610ca3565b60058103611fb157506103849061389f565b611fba81610ca3565b60078103611fcc575061038490613b6c565b80611fd8600892610ca3565b03611fe65761038490613fb5565b6103849061424b565b50611ff981610ca3565b60068114611f36565b6001600160401b0381116102375760051b60200190565b81601f820112156102015780519161203083612002565b9261203e604051948561026a565b808452602092838086019260051b820101928311610201578301905b828210612068575050505090565b838091835161207681610387565b81520191019061205a565b81601f820112156102015780519161209883612002565b926120a6604051948561026a565b808452602092838086019260051b820101928311610201578301905b8282106120d0575050505090565b815181529083019083016120c2565b9091606082840312610201578151916001600160401b0392838111610201578461210a918301612019565b936020808301518581116102015783019082601f830112156102015781519161213283612002565b92612140604051948561026a565b808452828085019160051b83010191858311610201578301905b82821061217c5750505050936040830151908111610201576103849201612081565b8151815290830190830161215a565b906020828203126102015781516001600160401b038111610201576103849201612081565b906002821015610cad5752565b908082519081815260208091019281808460051b8301019501936000915b8483106121eb5750505050505090565b9091929394958480612239600193601f198682030187528a5180518252838101518483015260408082015190830152606080820151908301526080809101519160a080928201520190610c0a565b98019301930191949392906121db565b90815180825260208080930193019160005b828110612269575050505090565b83516001600160a01b03168552938101939281019260010161225b565b9392906122b9610315936122ab6060936000895260e060208a015260e08901906121bd565b908782036040890152612249565b9401906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b9392906122b9610315936122ab6060936001895260e060208a015260e08901906121bd565b8051156113765760200190565b8051600110156113765760400190565b80518210156113765760209160051b010190565b908160000391808305600019149015171561130457565b6108766123f060406123939361236e6113fe565b506123838151602080825183010191016120df565b5095906020830196875191613066565b9061239c6102ab565b30815292600060208501819052308587015296879586926123d2926108769290916060890186905201516001600160a01b031690565b9260405196879586948593637c26833760e11b855260048501612286565b03925af1908115610ad6576124409161243a918491612459575b5061242a8461242261241c8451611396565b8461232f565b511315614f4a565b6124348151611396565b9061232f565b51612343565b612448610308565b925183526020830152604082015290565b61247591503d8086833e61246d818361026a565b81019061218b565b3861240a565b9061248582612002565b612492604051918261026a565b82815280926124a3601f1991612002565b0190602036910137565b906124b782612002565b60406124c58151928361026a565b83825281936124d6601f1991612002565b019060005b8281106124e85750505050565b81519060a08201918083106001600160401b038411176102375760209284526000815282600081830152600085830152606060008184015260808301528287010152016124db565b6040519061253d8261024f565b6002825261060f60f31b6020830152565b6125566113fe565b50805161256d6020918280825183010191016120df565b50612578825161247b565b9061258381516124ad565b9361258c6102ab565b30815291600083830181905230604080860191909152989094906060948686820152865b6125ba8951611396565b811015612675578061266a8b8e61266361265c858f8f908f918f928f938f86612657966126709f6126239361260f826126096108766125fc61261e968e61232f565b516001600160a01b031690565b9261232f565b6001600160a01b039091169052565b61232f565b51988661262f8161137b565b926126386102ca565b9b8c528b015289015287015261264c612530565b6080870152516113a5565b6113b4565b809361232f565b528c61232f565b506112f5565b6125b0565b509250989590856126e06108766108768a6126fd9d6126d2869e989c9a9c8d83019c8d51906126a38c612312565b51015261260f6126cc6126c56108766125fc6126bf8651611396565b8661232f565b9251611396565b8a61232f565b01516001600160a01b031690565b9288519a8b9586948593637c26833760e11b8552600485016122ed565b03925af1948515610ad6578495612744575b506127258461271d87612312565b511215614f63565b612736612730610308565b95612312565b518552519084015282015290565b6127599195503d8086833e61246d818361026a565b933861270f565b90816020910312610201575190565b929190612786602091604086526040860190610c0a565b930152565b6127936113fe565b50604081015161280f906020906001600160a01b03906127db906127ce9083165b6001600160a01b0316600090815260026020526040902090565b546001600160a01b031690565b16926127e8841515614f7c565b818151910193845191600060405180968195829463cdca175360e01b84526004840161276f565b03925af1908115610ad65760009161283e575b5061282b610308565b9151825260208201526000604082015290565b61285f915060203d8111612865575b612857818361026a565b810190612760565b38612822565b503d61284d565b6128cd906128786113fe565b5060408101516020906001600160a01b0390612899906127ce9083166127b4565b16916128a6831515614f7c565b8181519101928351916000604051809781958294632f80bb1d60e01b84526004840161276f565b03925af1918215610ad6576000926128fc575b506128e9610308565b9182525160208201526000604082015290565b61291591925060203d811161286557612857818361026a565b90386128e0565b91906040838203126102015782519260209081810151906001600160401b03821161020157019180601f8401121561020157825161295981612002565b93612967604051958661026a565b818552838086019260051b820101928311610201578301905b82821061298e575050505090565b815161ffff81168103610201578152908301908301612980565b6129b06113fe565b506040818101516001600160a01b0390811660009081526002602052918220541691612a0991906129e2841515614f7c565b602081519101938451918360405180968195829463cdca175360e01b84526004840161276f565b03925af1908115610ad657600091612a3c575b5060405191612a2a8361021c565b51825260208201526000604082015290565b612a57913d8091833e612a4f818361026a565b81019061291c565b5038612a1c565b612abe90612a6a6113fe565b506040818101516001600160a01b0390811660009081526002602052918220541691612a97831515614f7c565b6020815191019283519183604051809781958294632f80bb1d60e01b84526004840161276f565b03925af1918215610ad657600092612af1575b5060405191612adf8361021c565b82525160208201526000604082015290565b612b0591923d8091833e612a4f818361026a565b509038612ad1565b919091604081840312610201578051926001600160401b03938481116102015781612b39918401612019565b936020830151908111610201576103849201612019565b6060604051612b5e8161021c565b369037612b94612b78825160208082518301019101612b0d565b906020840193845190604060018060a01b039101511690612ba1565b60405191612a2a8361021c565b6000949385915b612bb28551611396565b831015612c7457612c29612bc96125fc858561232f565b612bd66125fc868961232f565b92612be66125fc6126cc8861137b565b604051630e5cfa0d60e21b81526001600160a01b039384166004820152948316602486015290911660448401526064830152602091908290829081906084820190565b03816001600160a01b0389165afa908115610ad657612c51928992612c57575b5050926112f5565b91612ba8565b612c6d9250803d1061286557612857818361026a565b3880612c49565b955050505050565b612c846113fe565b50612c99815160208082518301019101612b0d565b60208301805160409094018051939491939091612cd2916001600160a01b0316612cc287612faa565b90612ccc86612faa565b92612ba1565b91612ce5612cdf8461500d565b93615071565b9060009586925b6064841115612d04575b5050505050506128e9610308565b909192939496612d1d612d17838a611389565b60011c90565b90808214612d7e57508097612d438585612d3d8a5160018060a01b031690565b85612ba1565b885190808203612d5557505050612cf6565b1015612d715750612d6690946112f5565b929190949394612cec565b949150612d6690916112f5565b9750612cf6565b906020828203126102015781516001600160401b038111610201576103849201612019565b6020908181840312610201578051906001600160401b03821161020157019180601f84011215610201578251612ddf81612002565b93612ded604051958661026a565b818552838086019260051b820101928311610201578301905b828210612e14575050505090565b81518152908301908301612e06565b604090610384939281528160208201520190612249565b612e426113fe565b50612e996000612e5c835160208082518301019101612d85565b6040840151602090612e7890610876906001600160a01b031681565b940193845160405180958194829363d06ca61f60e01b845260048401612e23565b03915afa8015610ad657612ec691600091612ed6575b50612eb8610308565b925183526124348151611396565b5160208201526000604082015290565b612ef1913d8091833e612ee9818361026a565b810190612daa565b38612eaf565b612f5790612f036113fe565b506000612f1a825160208082518301019101612d85565b6040830151602090612f3690610876906001600160a01b031681565b93019283516040518096819482936307c0329d60e21b845260048401612e23565b03915afa918215610ad657600092612f8f575b50612f7c612f76610308565b92612312565b5182525160208201526000604082015290565b612fa391923d8091833e612ee9818361026a565b9038612f6a565b8051612fb581612002565b91612fc3604051938461026a565b818352601f19612fd283612002565b013660208501376000801980840193808511925b818110612ff65750505050505090565b83906001600160a01b0361300a828861232f565b511691611304578381840301918783116113045761302b613031938a61232f565b526112f5565b612fe6565b60408101516001600160a01b03161561116257602001511561305457565b604051630f6fa54560e41b8152600490fd5b9092613072825161247b565b9361307d81516124ad565b92600092835b61308d8351611396565b81101561310c57806130b56130ab6108766125fc613107958861232f565b61260f838c61232f565b6130bf818661232f565b516130c98261137b565b6130d16102ca565b91825282602083015260408201528660608201526130ed612530565b60808201526130fc828961232f565b5261266a818861232f565b613083565b5093949091506103159250606061312286612312565b51015261260f6126bf6126c56108766125fc6126bf8651611396565b919260809361316392979695978452602084015260a0604084015260a0830190612249565b6001600160a01b0390951660608201520152565b61317f6113fe565b506020818101517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e92916001600160a01b0391821684146133e5575b6131c28351828082518301019101612d85565b926131cf6125fc85612312565b60e08201805160608401805160408051636fe2528b60e11b81526001600160a01b039687166004820152959093166024860152604485015297909592909190858160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610ad6576133c8575b50518751608085015160a086015160c087015189516338ed173960e01b815260009b90958c9587956001600160a01b039283169587958995879561328395929493169290916004870161313e565b03925af1938415610ad657869188956133a2575b5001516132ac906001600160a01b0316610876565b146132d8575b506132cd906132bf610308565b955186526124348151611396565b519084015282015290565b83516370a0823160e01b81523060048201527f000000000000000000000000000000000000000000000000000000000000000091909116908381602481855afa908115610ad6578691613385575b50813b15613381578451632e1a7d4d60e01b81526004810191909152919085908390602490829084905af1918215610ad6576132cd92613368575b50906132b2565b8061337561337b9261023c565b806106ed565b38613361565b8580fd5b61339c9150843d861161286557612857818361026a565b38613326565b610876919550916133bf6132ac933d808c833e612ee9818361026a565b95915091613297565b6133de90863d881161286557612857818361026a565b5038613235565b60608301517f00000000000000000000000000000000000000000000000000000000000000008316803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad65761343d575b506131af565b8061337561344a9261023c565b38613437565b6020815260a0608061346d845183602086015260c0850190610c0a565b93600180841b03602082015116604085015260408101516060850152606081015182850152015191015290565b60009060033d116134a757565b905060046000803e60005160e01c90565b600060443d1061038457604051600319913d83016004833e81516001600160401b03918282113d6024840111176135155781840194855193841161351d573d8501016020848701011161351557506103849291016020019061026a565b949350505050565b50949350505050565b3d15613551573d9061353782610317565b91613545604051938461026a565b82523d6000602084013e565b606090565b61355e6113fe565b506020818101516001600160a01b0392907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e9084168114613834575b6135988251614feb565b60e08301805160608501805160408051636fe2528b60e11b81526001600160a01b039687166004820152959093166024860152604485015296909492939091868560648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4908115610ad657610876958792613817575b50845160a08601518991613688916001600160a01b031660c08901518d519061364760808c0151936136356102ca565b9586526001600160a01b031687860152565b878401526060830152608082015261366c61087660009a8b965160018060a01b031690565b90855194858094819363c04b8d5960e01b835260048301613450565b03925af18691816137f8575b5061371057505050505060016136a861349a565b6308c379a0146136de575b6136d0576000925b6136c3610308565b9451855284015282015290565b6136d8613526565b50614fd9565b6136e66134b8565b806136f157506136b3565b835162461bcd60e51b815290819061370c9060048301610c2f565b0390fd5b930151929350909161372a906001600160a01b0316610876565b14613739575b506000926136bb565b82516370a0823160e01b815230600482015293907f0000000000000000000000000000000000000000000000000000000000000000168185602481845afa948515610ad6576000956137d9575b50803b15610201578351632e1a7d4d60e01b815260048101959095526000908590602490829084905af1938415610ad6576000946137c6575b5092613730565b806133756137d39261023c565b386137bf565b6137f1919550823d841161286557612857818361026a565b9338613786565b613810919250893d8b1161286557612857818361026a565b9038613694565b61382d90893d8b1161286557612857818361026a565b5038613605565b60608201517f00000000000000000000000000000000000000000000000000000000000000008516803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad65761388c575b5061358e565b806133756138999261023c565b38613886565b6138a76113fe565b506020818101517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e926001600160a01b03929183168414613b01575b6138e18151614feb565b60e08201805160608401805160408051636fe2528b60e11b81526001600160a01b0396871660048201529590931660248601526044850152969195909492909190838160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af48015610ad657613ae4575b50835160a08501519096906001600160a01b031660c08601518951906080880151926139736102ca565b9a8b526001600160a01b0316878b01528989015260608901526080880152516001600160a01b03166001600160a01b03166001600160a01b03169583865180809363c04b8d5960e01b825260048201906139cc91613450565b03816000809b5af1948515610ad65786918896613abb575b5001516139f9906001600160a01b0316610876565b14613a08575b506136c3610308565b83516370a0823160e01b81523060048201527f000000000000000000000000000000000000000000000000000000000000000091909116908281602481855afa908115610ad6578691613a9e575b50813b15613381578451632e1a7d4d60e01b815260048101919091529085908290602490829084905af18015610ad657156139ff5780613375613a989261023c565b386139ff565b613ab59150833d851161286557612857818361026a565b38613a56565b61087691965091613adb6139f993873d891161286557612857818361026a565b969150916139e4565b613afa90843d861161286557612857818361026a565b5038613949565b60608101517f00000000000000000000000000000000000000000000000000000000000000008416803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad657613b59575b506138d7565b80613375613b669261023c565b38613b53565b613b746113fe565b50604080820190613bd0613b94610876610876855160018060a01b031690565b60a08501805184516370a0823160e01b8082526001600160a01b0390921660048201529560209490939192918591889190829081906024820190565b03915afa958615610ad657600096613e37575b5083870180519093859392917399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e908a906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101613d3a575b50610876613cab93613c8f613c9d94613cce9a85613c5760e061087698015160018060a01b031690565b81519251909390613c70906001600160a01b0316610876565b6000929103613d3357606091500151905b613c89613e5a565b92613ea5565b50516001600160a01b031690565b91516001600160a01b031690565b86519283526001600160a01b031660048301529092839190829081906024820190565b03915afa938415610ad657600094613ced928691613d16575b506113b4565b90613cfe6080860151831015614f95565b6060613d08610308565b950151855284015282015290565b613d2d9150843d861161286557612857818361026a565b38613ce7565b5090613c81565b969295613d5861087661087660e0600495015160018060a01b031690565b8a51631a5896b360e31b815292839182905afa8015610ad6578891600091613e1a575b5060608c01518a51636fe2528b60e11b81526001600160a01b03998a16600482015291909816602482015260448101979097528660648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4918215610ad6576108768896613c8f613c9d94610876948f613cce9c613cab99613dfd575b5095509a509450509350613c2d565b613e13908d803d1061286557612857818361026a565b5038613dee565b613e319150823d841161186a5761185c818361026a565b38613d7b565b8492919650613e5290833d851161286557612857818361026a565b959091613be3565b60405190613e678261021c565b60298252681d594819985a5b195960ba1b6040837f416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c60208201520152565b90929192834710613ed057600081610384956020839451920190855af1613eca613526565b91613f24565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b91929015613f865750815115613f38575090565b3b15613f415790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015613f995750805190602001fd5b60405162461bcd60e51b815290819061370c9060048301610c2f565b613fbd6113fe565b506040810180516140179190613fdd90610876906001600160a01b031681565b60a0840180516040516370a0823160e01b8082526001600160a01b0390921660048201526020959293909286918491829081906024820190565b03915afa928315610ad65785926000946141ae575b5082870180519095907399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e9089906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d198101614109575b5061087661409d93613c8f613c9d946140c19b85613c5760e061087698015160018060a01b031690565b6040519283526001600160a01b031660048301529093849190829081906024820190565b03915afa8015610ad6576140dc92600091613d1657506113b4565b906140ed6080840151831015614f95565b60606140f7610308565b93015183528201526000604082015290565b60e0919091015160608b0151604051636fe2528b60e11b81526001600160a01b039384166004820152929091166024830152604482015291948260648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4968715610ad6576108768996613c8f613c9d94610876948e61409d986140c19e614191575b5095509b509450509350614073565b6141a7908d803d1061286557612857818361026a565b5038614182565b6141c6919450833d851161286557612857818361026a565b923861402c565b90916060828403126102015781516141e481610387565b9260208301516141f381610387565b926040810151906001600160401b038211610201570181601f8201121561020157805161421f81610317565b9261422d604051948561026a565b81845260208284010111610201576103849160208085019101610be7565b6142536113fe565b506040810180516142a69060209061427590610876906001600160a01b031681565b60a08501516040516370a0823160e01b81526001600160a01b03909116600482015292839190829081906024820190565b03915afa908115610ad6576000916144b7575b506142ce8351602080825183010191016141cd565b602086018051929391929091906001600160a01b03167399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9d1981016143ff575b505061087661439795613c8f602095614366957399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e61433f610876610876985160018060a01b031690565b600091036143f9575060608b0151905b614357613e5a565b926001600160a01b0316613ea5565b60a08501516040516370a0823160e01b81526001600160a01b03909116600482015293849190829081906024820190565b03915afa8015610ad6576143b2926000916143e057506113b4565b6143c26080830151821015614f95565b60606143cc610308565b920151825260208201526000604082015290565b613d2d915060203d60201161286557612857818361026a565b9061434f565b6060880151604051636fe2528b60e11b81526001600160a01b039283166004820152929091166024830152604482015260208160648173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4958615610ad657613c8f602095614366957399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e61433f61087661087698610876986143979e61449a575b509850505050955095505095614301565b6144b0908d3d8f1161286557612857818361026a565b5038614489565b6144d0915060203d60201161286557612857818361026a565b386142b9565b6144de6113fe565b506144ef60c0820151421115614edf565b805191614506602093848082518301019101612b0d565b606084929401938451936000945b61451e8351611396565b8610156148165773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61454a6108766125fc898761232f565b0361467e5760e0850151889061456a90610876906001600160a01b031681565b6145776125fc898861232f565b906145856125fc8a8861232f565b846145956125fc6126cc8d61137b565b936145a089516113a5565b8c148c8c6000926000146146745761462c92506080810151915b6145c48d516113a5565b0361466c5760a001516001600160a01b0316905b604051631a4c1ca360e01b81526001600160a01b039485166004820152958416602487015296831660448601526064850198909852608484019590955290951660a4820152938492839190829060c4820190565b03925af18015610ad6576146499160009161464f575b50956112f5565b94614514565b6146669150893d8b1161286557612857818361026a565b38614642565b5030906145d8565b61462c92916145ba565b6146d961468e6125fc888661232f565b60e08701805160408051636fe2528b60e11b81526001600160a01b03948516600480830191909152949092166024830152604482018690529093909291908c90859081906064820190565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4938415610ad6578c946147f9575b50516001600160a01b03169089614717818a61232f565b516001600160a01b0316918a61472d838b61232f565b516001600160a01b0316958a6147428561137b565b61474c908261232f565b516001600160a01b0316998151614762906113a5565b60009661462c9591889082036147ef57506147836080830151945b516113a5565b1487146147e75760a001516001600160a01b0316925b519a8b998a988997631a4c1ca360e01b8952880194909360a094979692939760c0870198600180881b038096818094168a521660208901521660408701526060860152608085015216910152565b503092614799565b614783909461477d565b61480f90853d871161286557612857818361026a565b5038614700565b94509592505050614825610308565b925183528201526000604082015290565b9594939161486d6148a4919492946000895261485f6101209660209780898d01528b01906121bd565b9089820360408b0152612249565b9160608801906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b85810360e087015282808351928381520192019260005b8281106148cf575050506101009150930152565b8451845293810193928101926001016148bb565b909261498661494f60a060c09598979660e08652805160e087015261491160208201516101008801906121b0565b600180831b038060408301511661012088015260608201511661014087015260808101516101608701520151856101808601526101a0850190610c0a565b9660208401906060809160018060a01b03808251168552602082015115156020860152604082015116604085015201511515910152565b60a08201520152565b6149976113fe565b508051906149af6020928380825183010191016120df565b929091936149c1600286511015614fae565b808201517399ec76235f8a5a52611b0da5f0c6b09e1dcd2c9e906001600160a01b039081168214614e74575b6149f96125fc88612312565b9160e0850195614a57614a12885160018060a01b031690565b97606088019a878c5160409b8c519586928392636fe2528b60e11b845260049c8d850160409194939294606082019560018060a01b0380921683521660208201520152565b038173__$d13cb5064fc43aa5afb84d8e93c86c1222$__5af4928315610ad6578a93614e57575b5060a08901516001600160a01b0316908c90614a986102ab565b308152956000878c018190526001600160a01b0390941686880152929c8d93908460608901528251600210614cb257508b96948b9694614b3b614b5a95614b2b61087696614ae861087697612312565b5199614b086108766125fc614b026108766125fc87612312565b9461231f565b935195614b136102e9565b9b8c528d8c01526001600160a01b03909116908a0152565b6001600160a01b03166060880152565b6080860152614b48612530565b60a0860152516001600160a01b031690565b908b88614b858d60c060808a01519901519051988997889687956352bbbe2960e01b875286016148e3565b03925af1958615610ad65787918997614c89575b500151614bae906001600160a01b0316610876565b14614bbe575b50506136c3610308565b84516370a0823160e01b81523083820190815290927f00000000000000000000000000000000000000000000000000000000000000009290921691908490849081906020010381855afa928315610ad6578793614c6a575b50813b15614c66578551632e1a7d4d60e01b8152908101928352918691839182908490829060200103925af18015610ad657614c53575b80614bb4565b80613375614c609261023c565b38614c4d565b8680fd5b614c82919350843d861161286557612857818361026a565b9138614c16565b61087691975091614ca9614bae93883d8a1161286557612857818361026a565b97915091614b99565b8496614d079160c08f9e9f97956108768f96614cea92614cd7916108769b5191613066565b9b51909b996001600160a01b0390911690565b970151915163945bcec960e01b8152998a98899788968701614836565b03925af1948515610ad65787918996614e31575b500151614d30906001600160a01b0316610876565b14614d5f575b505061243a614d5591614d47610308565b965187526124348151611396565b9084015282015290565b84516370a0823160e01b81523083820190815290927f00000000000000000000000000000000000000000000000000000000000000009290921691908590849081906020010381855afa928315610ad6578793614e12575b50813b15614c66578551632e1a7d4d60e01b815290810192835292918691849182908490829060200103925af1908115610ad657614d559261243a92614dff575b5091614d36565b80613375614e0c9261023c565b38614df8565b614e2a919350853d871161286557612857818361026a565b9138614db7565b61087691965091614e4e614d30933d808d833e61246d818361026a565b96915091614d1b565b614e6d90893d8b1161286557612857818361026a565b5038614a7e565b60608401517f00000000000000000000000000000000000000000000000000000000000000008216803b1561020157600090600460405180948193630d0e30db60e41b83525af18015610ad657614ecc575b506149ed565b80613375614ed99261023c565b38614ec6565b15614ee657565b60405163883bf0db60e01b8152600490fd5b15614eff57565b604051635269639360e01b8152600490fd5b15614f1857565b604051631aa5e6a560e21b8152600490fd5b15614f3157565b60405163036be76f60e61b8152600490fd5b1561116257565b15614f5157565b604051630279891960e11b8152600490fd5b15614f6a57565b6040516301f9d96160e71b8152600490fd5b15614f8357565b6040516339028fcd60e21b8152600490fd5b15614f9c57565b604051637974230960e11b8152600490fd5b15614fb557565b6040516367678b8760e11b8152600490fd5b6040516368a1e68f60e11b8152600490fd5b60405163076fc27360e51b8152600490fd5b6014815110614ffb576014015190565b60405163a78aa27f60e01b8152600490fd5b6706f05b59d3b2000080820291808304821481151715611304578183040361505f5781019081811161130457811061504d57670de0b6b3a7640000900490565b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b6714d1120d7b16000090818102918183048114821517156113045782040361505f576706f05b59d3b2000081019081811161130457811061504d57670de0b6b3a764000090049056fea2646970667358221220c789661a1572f2633b916fdd4ea852b180f534e78e1b6c70635a2477d14a7aa864736f6c63430008120033";

type DexAdapterV2ConstructorParams =
  | [linkLibraryAddresses: DexAdapterV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DexAdapterV2__factory extends ContractFactory {
  constructor(...args: DexAdapterV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DexAdapterV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DexAdapterV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d13cb5064fc43aa5afb84d8e93c86c1222\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _registry: string,
    _WNAtive: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DexAdapterV2> {
    return super.deploy(
      _registry,
      _WNAtive,
      overrides || {}
    ) as Promise<DexAdapterV2>;
  }
  getDeployTransaction(
    _registry: string,
    _WNAtive: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, _WNAtive, overrides || {});
  }
  attach(address: string): DexAdapterV2 {
    return super.attach(address) as DexAdapterV2;
  }
  connect(signer: Signer): DexAdapterV2__factory {
    return super.connect(signer) as DexAdapterV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterV2Interface {
    return new utils.Interface(_abi) as DexAdapterV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DexAdapterV2 {
    return new Contract(address, _abi, signerOrProvider) as DexAdapterV2;
  }
}

export interface DexAdapterV2LibraryAddresses {
  ["contracts/libraries/TokenApproveLibrary.sol:TokenApproveLibrary"]: string;
}
