/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface FlashLoanManagerInterface extends ethers.utils.Interface {
  functions: {
    "flashLoan(address,address[],uint256[],bytes)": FunctionFragment;
    "flashLoanFeeRate()": FunctionFragment;
    "flashLoanProtocolRate()": FunctionFragment;
    "initialize(address,address,address,uint256,uint256)": FunctionFragment;
    "pause()": FunctionFragment;
    "paused()": FunctionFragment;
    "primexDNS()": FunctionFragment;
    "registry()": FunctionFragment;
    "setFlashLoanRates(uint256,uint256)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "unpause()": FunctionFragment;
    "whiteBlackList()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "flashLoan",
    values: [string, string[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "flashLoanFeeRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "flashLoanProtocolRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(functionFragment: "primexDNS", values?: undefined): string;
  encodeFunctionData(functionFragment: "registry", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setFlashLoanRates",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "whiteBlackList",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "flashLoan", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "flashLoanFeeRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "flashLoanProtocolRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "primexDNS", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setFlashLoanRates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "whiteBlackList",
    data: BytesLike
  ): Result;

  events: {
    "ChangedFlashLoanRates(uint256,uint256)": EventFragment;
    "FlashLoan(address,address,address,uint256,uint256,uint256)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "Paused(address)": EventFragment;
    "Unpaused(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChangedFlashLoanRates"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FlashLoan"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
}

export type ChangedFlashLoanRatesEvent = TypedEvent<
  [BigNumber, BigNumber] & {
    flashLoanFeeRate: BigNumber;
    flashLoanProtocolRate: BigNumber;
  }
>;

export type FlashLoanEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber, BigNumber] & {
    target: string;
    initiator: string;
    asset: string;
    amount: BigNumber;
    flashLoanFee: BigNumber;
    flashLoanProtocolFee: BigNumber;
  }
>;

export type InitializedEvent = TypedEvent<[number] & { version: number }>;

export type PausedEvent = TypedEvent<[string] & { account: string }>;

export type UnpausedEvent = TypedEvent<[string] & { account: string }>;

export class FlashLoanManager extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: FlashLoanManagerInterface;

  functions: {
    flashLoan(
      receiver: string,
      buckets: string[],
      amounts: BigNumberish[],
      params: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    flashLoanFeeRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    flashLoanProtocolRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    initialize(
      _registry: string,
      _primexDNS: string,
      _whiteBlackList: string,
      _flashLoanFeeRate: BigNumberish,
      _flashLoanProtocolRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    primexDNS(overrides?: CallOverrides): Promise<[string]>;

    registry(overrides?: CallOverrides): Promise<[string]>;

    setFlashLoanRates(
      _newFlashLoanFeeRate: BigNumberish,
      _newFlashLoanProtocolRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    whiteBlackList(overrides?: CallOverrides): Promise<[string]>;
  };

  flashLoan(
    receiver: string,
    buckets: string[],
    amounts: BigNumberish[],
    params: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  flashLoanFeeRate(overrides?: CallOverrides): Promise<BigNumber>;

  flashLoanProtocolRate(overrides?: CallOverrides): Promise<BigNumber>;

  initialize(
    _registry: string,
    _primexDNS: string,
    _whiteBlackList: string,
    _flashLoanFeeRate: BigNumberish,
    _flashLoanProtocolRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  pause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  primexDNS(overrides?: CallOverrides): Promise<string>;

  registry(overrides?: CallOverrides): Promise<string>;

  setFlashLoanRates(
    _newFlashLoanFeeRate: BigNumberish,
    _newFlashLoanProtocolRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    _interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  unpause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  whiteBlackList(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    flashLoan(
      receiver: string,
      buckets: string[],
      amounts: BigNumberish[],
      params: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    flashLoanFeeRate(overrides?: CallOverrides): Promise<BigNumber>;

    flashLoanProtocolRate(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _registry: string,
      _primexDNS: string,
      _whiteBlackList: string,
      _flashLoanFeeRate: BigNumberish,
      _flashLoanProtocolRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    pause(overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    primexDNS(overrides?: CallOverrides): Promise<string>;

    registry(overrides?: CallOverrides): Promise<string>;

    setFlashLoanRates(
      _newFlashLoanFeeRate: BigNumberish,
      _newFlashLoanProtocolRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    unpause(overrides?: CallOverrides): Promise<void>;

    whiteBlackList(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "ChangedFlashLoanRates(uint256,uint256)"(
      flashLoanFeeRate?: null,
      flashLoanProtocolRate?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { flashLoanFeeRate: BigNumber; flashLoanProtocolRate: BigNumber }
    >;

    ChangedFlashLoanRates(
      flashLoanFeeRate?: null,
      flashLoanProtocolRate?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { flashLoanFeeRate: BigNumber; flashLoanProtocolRate: BigNumber }
    >;

    "FlashLoan(address,address,address,uint256,uint256,uint256)"(
      target?: string | null,
      initiator?: string | null,
      asset?: string | null,
      amount?: null,
      flashLoanFee?: null,
      flashLoanProtocolFee?: null
    ): TypedEventFilter<
      [string, string, string, BigNumber, BigNumber, BigNumber],
      {
        target: string;
        initiator: string;
        asset: string;
        amount: BigNumber;
        flashLoanFee: BigNumber;
        flashLoanProtocolFee: BigNumber;
      }
    >;

    FlashLoan(
      target?: string | null,
      initiator?: string | null,
      asset?: string | null,
      amount?: null,
      flashLoanFee?: null,
      flashLoanProtocolFee?: null
    ): TypedEventFilter<
      [string, string, string, BigNumber, BigNumber, BigNumber],
      {
        target: string;
        initiator: string;
        asset: string;
        amount: BigNumber;
        flashLoanFee: BigNumber;
        flashLoanProtocolFee: BigNumber;
      }
    >;

    "Initialized(uint8)"(
      version?: null
    ): TypedEventFilter<[number], { version: number }>;

    Initialized(
      version?: null
    ): TypedEventFilter<[number], { version: number }>;

    "Paused(address)"(
      account?: null
    ): TypedEventFilter<[string], { account: string }>;

    Paused(account?: null): TypedEventFilter<[string], { account: string }>;

    "Unpaused(address)"(
      account?: null
    ): TypedEventFilter<[string], { account: string }>;

    Unpaused(account?: null): TypedEventFilter<[string], { account: string }>;
  };

  estimateGas: {
    flashLoan(
      receiver: string,
      buckets: string[],
      amounts: BigNumberish[],
      params: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    flashLoanFeeRate(overrides?: CallOverrides): Promise<BigNumber>;

    flashLoanProtocolRate(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _registry: string,
      _primexDNS: string,
      _whiteBlackList: string,
      _flashLoanFeeRate: BigNumberish,
      _flashLoanProtocolRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    primexDNS(overrides?: CallOverrides): Promise<BigNumber>;

    registry(overrides?: CallOverrides): Promise<BigNumber>;

    setFlashLoanRates(
      _newFlashLoanFeeRate: BigNumberish,
      _newFlashLoanProtocolRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    whiteBlackList(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    flashLoan(
      receiver: string,
      buckets: string[],
      amounts: BigNumberish[],
      params: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    flashLoanFeeRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    flashLoanProtocolRate(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _registry: string,
      _primexDNS: string,
      _whiteBlackList: string,
      _flashLoanFeeRate: BigNumberish,
      _flashLoanProtocolRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    primexDNS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setFlashLoanRates(
      _newFlashLoanFeeRate: BigNumberish,
      _newFlashLoanProtocolRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    whiteBlackList(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
