/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapPriceFeed,
  UniswapPriceFeedInterface,
} from "../UniswapPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "uniswapV3Factory_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "poolUpdateInterval_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DS_MATH_ADD_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "DS_MATH_MUL_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CARDINALITY",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_INTERVAL",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "activeFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "addFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "getExchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsTwapInterval",
        type: "uint32",
      },
    ],
    name: "getQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsTwapInterval",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "secondsUpdateInterval",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "getQuoteAndUpdatePool",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "secondsUpdateInterval",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "getUpdatedPool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "pool",
        type: "tuple",
      },
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolUpdateInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint48",
        name: "lastUpdatedTimestamp",
        type: "uint48",
      },
      {
        internalType: "uint16",
        name: "lastUpdatedCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolUpdateInterval",
        type: "uint256",
      },
    ],
    name: "setPoolUpdateInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_twapInterval",
        type: "uint32",
      },
    ],
    name: "setTwapInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "cardinalityNextIncrease",
        type: "uint8",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint48",
            name: "lastUpdatedTimestamp",
            type: "uint48",
          },
          {
            internalType: "uint16",
            name: "lastUpdatedCardinalityNext",
            type: "uint16",
          },
        ],
        internalType: "struct IUniswapPriceFeed.PoolData",
        name: "highestLiquidityPool",
        type: "tuple",
      },
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040818152346200033f5760808262002e8b803803809162000024828562000344565b8339810103126200033f576200003a8262000368565b9160208082015163ffffffff9182821682036200033f5762000063606086860151950162000368565b8551909490926001600160401b0391848801838111868210176200032957885261070885526000958685870152865495600296878955808810620002ff575b50878052858820908892895b888a8210620002da575050505055875192608084019084821090821117620002c65788526127108352610bb8848401526101f48884015260646060840152600196875493600494858a5580861062000294575b508888528588208891895b8b898983106200026c575050509190555088516301ffc9a760e01b8152637965db0b60e01b858201526001600160a01b039190911692908581602481875afa9081156200026257889162000221575b5015620002115787989960805283549160055563ffffffff60a01b9060a01b169060018060c01b0319161717905582935b620001c6575b8551612af490816200039782396080518181816108d6015281816109bc01528181610e9101528181611cd3015261222d0152f35b84548410156200020b5784809481855262ffffff838620600a9081840401549060038091850602901b1c1685528383528785208260ff1982541617905501936200018c565b62000192565b885163044aa57560e41b81528490fd5b90508581813d83116200025a575b6200023b818362000344565b8101031262000256575180151581036200025657386200015b565b8780fd5b503d6200022f565b8a513d8a823e3d90fd5b9091929461ffff8651169062ffffff6003868102901b92831b921b191617940191016200010c565b89895286892080546001600160601b03168155620002bf91600a6009909101048101908b016200037d565b3862000101565b634e487b7160e01b87526041600452602487fd5b8395836001939495511690858560051b92831b921b19161795019101919091620000ae565b888052868920805487168155620003229160070160031c8101906001016200037d565b38620000a2565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200032957604052565b51906001600160a01b03821682036200033f57565b81811062000389575050565b600081556001016200037d56fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146112145750806311be8a5214610bc25780631d27050f14610adf5780633c1d5df014610ab8578063403e05d31461097d5780634acc79ed14610940578063531aa03e146109055780635b549182146108c057806363711362146107dc5780637b103999146107b35780638200d8731461079657806389ac414714610779578063901754d7146106fb57806394fafa1214610634578063a2d7046f146105e2578063b21dfd20146105a4578063baaa61be1461026b578063c14152331461024d5763d5cefadc146100f057600080fd5b346102485760c0366003190112610248576101096113ad565b61011161127d565b610119611293565b610121611345565b9160a4359260ff84168403610248576101406000946084358585611c18565b825190936001600160a01b039392508491841680610164575b602089604051908152f35b90919293949596975063ffffffff8216156000146102255750508216156101a3575b5050906020936101969392612a74565b3880808080808080610159565b51604051633850c7bd60e01b81529493925060e09185916004918391165afa93841561021957602094610196946000916101e4575b50919293819550610186565b610206915060e03d60e011610212575b6101fe818361140f565b81019061155d565b505050505050386101d8565b503d6101f4565b6040513d6000823e3d90fd5b90915061024396959450602097935061023e92506128c5565b6115c1565b610196565b600080fd5b34610248576000366003190112610248576020600554604051908152f35b3461024857604036600319011261024857610284611267565b61028c61127d565b60405163313ce56760e01b8082526020936001600160a01b038082169490939091908681600481895afa908115610219578790600092610560575b506001600160801b036102db6004936114ea565b1696604051928380928882525afa90811561021957600091610524575b5061030561030a916114fb565b6114ea565b9260405190815286816004818887165afa908115610219576000916104e8575b50610305610337916114fb565b918563ffffffff60045460a01c16600554966103566000988587611b94565b809150938383511680610415575b50505050505050505061037a906103809361150c565b9261150c565b670de0b6b3a764000091828102928184048114821517156103ff578304036103ed576103af8160011c83611b87565b9182106103db5780156103c55760405191048152f35b634e487b7160e01b600052601260045260246000fd5b604051630a77254f60e01b8152600490fd5b604051631550e8b760e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b9080929394959697989b50156000146104c6575050821615610457575b505091610380956104479261037a9594612a74565b9381925085888080808080610364565b51604051633850c7bd60e01b81529594935060e0925085916004918391165afa9081156102195761038095876104479361037a966000916104a1575b509294955092819750610432565b6104ba915060e03d60e011610212576101fe818361140f565b5050505050508b610493565b61037a989795506103809a94506104e396935061023e92506128c5565b610447565b90508681813d831161051d575b6104ff818361140f565b8101031261024857610305610516610337926114dc565b915061032a565b503d6104f5565b90508681813d8311610559575b61053b818361140f565b810103126102485761030561055261030a926114dc565b91506102f8565b503d610531565b809250813d831161059d575b610576818361140f565b8101031261024857866001600160801b036102db6105956004946114dc565b9350506102c7565b503d61056c565b346102485760203660031901126102485760043562ffffff8116809103610248576000526002602052602060ff604060002054166040519015158152f35b34610248576080366003190112610248576105fb611267565b61060361127d565b60643560ff8116810361024857610630926106219260443591611c18565b604093919351938493846112e6565b0390f35b34610248576020366003190112610248576044602060018060a01b036004541660405192838092632474521560e21b82527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b6360048301523360248301525afa908115610219576000916106c2575b50156106b057600435600555005b60405163036be76f60e61b8152600490fd5b90506020813d82116106f3575b816106dc6020938361140f565b81010312610248576106ed90611550565b816106a2565b3d91506106cf565b34610248576040366003190112610248576080610716611267565b61071e61127d565b60018060a01b038092166000526003602052816040600020911660005260205261ffff604060002054604051928116835262ffffff8160a01c16602084015265ffffffffffff8160b81c16604084015260e81c166060820152f35b346102485760003660031901126102485760206040516107088152f35b346102485760003660031901126102485760206040516101008152f35b34610248576000366003190112610248576004546040516001600160a01b039091168152602090f35b34610248576080366003190112610248576107f56113ad565b6107fd61127d565b610805611293565b9161080e611345565b926000926001600160a01b036108248383611456565b51169485610838575b602085604051908152f35b929350909163ffffffff81166108ab575060e06004939460405194858092633850c7bd851b82525afa9384156102195760209461087d94600091610886575b50612a74565b8280808061082d565b61089f915060e03d60e011610212576101fe818361140f565b50505050505086610877565b9261023e6108bb946020966128c5565b61087d565b34610248576000366003190112610248576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610248576040366003190112610248576080610931610923611267565b61092b61127d565b90611456565b61093e60405180926112a9565bf35b34610248576020366003190112610248576004356001548110156102485762ffffff61096d602092611358565b9190546040519260031b1c168152f35b34610248576020806003193601126102485760043562ffffff91828216809203610248576040516322afcccb60e01b81526004810183905281816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561021957600091610a83575b5060020b151580610a6b575b610a0757005b60029082600052526040600020600160ff19825416179055600154600160401b811015610a5557806001610a3e9201600155611358565b909283549160031b92831b921b1916179055600080f35b634e487b7160e01b600052604160045260246000fd5b50816000526002815260ff6040600020541615610a01565b90508181813d8311610ab1575b610a9a818361140f565b8101031261024857610aab90611533565b846109f5565b503d610a90565b3461024857600036600319011261024857602063ffffffff60045460a01c16604051908152f35b346102485760203660031901126102485760043563ffffffff811681036102485760048054604051632474521560e21b81527f5a7d4408f4759dddd7fdfd0d21abd99341dc2f52cda14804988a9b2df20766d89281019290925233602483015291906020816044816001600160a01b0387165afa90811561021957600091610b89575b50156106b05763ffffffff60a01b1990911660a09190911b63ffffffff60a01b1617600455005b90506020813d8211610bba575b81610ba36020938361140f565b8101031261024857610bb490611550565b83610b62565b3d9150610b96565b3461024857606036600319011261024857610bdb611267565b610be361127d565b906044359060ff8216820361024857610bfa611431565b50600090610c06611431565b506001600160a01b03848116908216101561120e5792915b610c26611431565b92606094600092600080600154905b818110610e0257505086516001600160a01b031691905081610cf7575b50506106309360409160018060a01b031681526003602052209060018060a01b0316600052602052604060002060018060a01b0384511681549062ffffff60a01b602087015160a01b1665ffffffffffff60b81b604088015160b81b169161ffff60e81b606089015160e81b169360ff60f81b16171717179055600080516020612a9f8339815191526080604051610cea81876112a9565ba1604051938493846112e6565b60ff8116159182158093610dfa575b610d11575b50610c52565b60049192955060e09060405192838092633850c7bd851b82525afa90811561021957600090600092610dd2575b50606088019261ffff8093169182855296610d5a575b50610d0b565b610100821015610d545760ff1601169081905285516001600160a01b03169490853b15610248576000956024879260405198899384926332148f6760e01b845260048401525af19182156102195761063095604093610dbe575b8296829450610d54565b610dc99192506113fb565b60009088610db4565b9050610ded915060e03d60e011610212576101fe818361140f565b5050939250505089610d3e565b506001610d06565b62ffffff610e0f82611358565b90549060031b1c16604051610e23816113df565b6001600160a01b0387811680835290891660208301819052604090920183905291818310156102485760405191602083019384526040830152606082015260608152610e6e816113c3565b51902060405190602082019060ff60f81b82526bffffffffffffffffffffffff197f000000000000000000000000000000000000000000000000000000000000000060601b166021840152603583015260557fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54818401528252610ef0826113c3565b905190206001600160a01b0316803b610f0d575b50600101610c35565b60009060609160405163883bdbfd60e01b602082015260448101602060248301526000548091526064820190600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563906000915b8160078401106111a45793600094938193610fc9938796549181811061118d575b818110611174575b81811061115a575b818110611140575b818110611126575b81811061110c575b8181106110f2575b106110e4575b5003601f19810183528261140f565b602081519101855afa610fda61278e565b90611056575b50856001600160801b03821611610ff9575b5050610f04565b9094506001929b506001600160801b03919a50169262ffffff61101b8c611358565b90549060031b1c1660405191611030836113c3565b8252602082015265ffffffffffff42166040820152600060608201529899908b80610ff2565b905061106d919250602080825183010191016127ce565b9091906001600160a01b0361108182612771565b5116906001600160a01b039061109690612781565b511690036001600160a01b0381116103ff57602081901b640100000000600160c01b0316156103c55760201b640100000000600160c01b031660e160a31b046001600160801b03168d610fe0565b60e01c815260200138610fba565b92602060019163ffffffff8560c01c168152019301610fb4565b92602060019163ffffffff8560a01c168152019301610fac565b92602060019163ffffffff8560801c168152019301610fa4565b92602060019163ffffffff8560601c168152019301610f9c565b92602060019163ffffffff8560401c168152019301610f94565b92602060019163ffffffff85831c168152019301610f8c565b92602060019163ffffffff85168152019301610f84565b926001610100600892865463ffffffff8082168352808260201c166020840152808260401c166040840152808260601c16606084015260808183821c169084015260a08183821c169084015260c09082821c169083015260e01c60e0820152019401920191610f63565b91610c1e565b34610248576020366003190112610248576004359063ffffffff60e01b821680920361024857602091630cc36a0960e11b8114908115611256575b5015158152f35b6301ffc9a760e01b1490508361124f565b600435906001600160a01b038216820361024857565b602435906001600160a01b038216820361024857565b604435906001600160a01b038216820361024857565b80516001600160a01b0316825260208082015162ffffff169083015260408082015165ffffffffffff169083015260609081015161ffff16910152565b91909392936112f98360c08101926112a9565b60c06080840152815180915260e083019060208093019260005b82811061132e5750505060a0915093600180831b0316910152565b845160060b84529381019392810192600101611313565b6064359063ffffffff8216820361024857565b906001548210156113975760016000526003600a8084047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60193060290565b634e487b7160e01b600052603260045260246000fd5b600435906001600160801b038216820361024857565b6080810190811067ffffffffffffffff821117610a5557604052565b6060810190811067ffffffffffffffff821117610a5557604052565b67ffffffffffffffff8111610a5557604052565b90601f8019910116810190811067ffffffffffffffff821117610a5557604052565b6040519061143e826113c3565b60006060838281528260208201528260408201520152565b9061145f611431565b506001600160a01b0391829082821681831610156114d6575b166000526003602052816040600020911660005260205261ffff604060002091604051926114a5846113c3565b54908116835262ffffff8160a01c16602084015265ffffffffffff8160b81c16604084015260e81c16606082015290565b91611478565b519060ff8216820361024857565b60ff16604d81116103ff57600a0a90565b60ff166012039060ff82116103ff57565b818102929181159184041417156103ff57565b51906001600160a01b038216820361024857565b51908160020b820361024857565b519061ffff8216820361024857565b5190811515820361024857565b908160e0910312610248576115718161151f565b9161157e60208301611533565b9161158b60408201611541565b9161159860608301611541565b916115a560808201611541565b916115be60c06115b760a085016114dc565b9301611550565b90565b9291909260020b90600082126000146119995781600003915b620d89e88311611987576001831615611975576001600160881b036ffffcb933bd6fad37aa2d162d1a5940015b169260028116611959575b6004811661193d575b60088116611921575b60108116611905575b602081166118e9575b604081166118cd575b6080908181166118b2575b6101008116611897575b610200811661187c575b6104008116611861575b6108008116611846575b611000811661182b575b6120008116611810575b61400081166117f5575b61800081166117da575b6201000081166117bf575b6202000081166117a5575b62040000811661178b575b6208000016611770575b5060001261175d575b60ff9163ffffffff8116611755576000905b6001600160801b03936001600160a01b0392839260201c911601811684811161172c578061170d9161150c565b941691161015611722576115be921690611b3c565b6115be9216611ac1565b806117369161199f565b94169116101561174b576115be921690611a76565b6115be92166119ed565b6001906116e0565b81156103c55760001991909104906116ce565b6b048a170391f7dc42444e8fa26000929402901c92906116c5565b6d2216e584f5fa1ea926041bedfe98909402811c936116bb565b936e5d6af8dedb81196699c329225ee60402811c936116b0565b936f09aa508b5b7a84e1c677de54f3e99bc902811c936116a5565b936f31be135f97d08fd981231505542fcfa602811c9361169a565b936f70d869a156d2a1b890bb3df62baf32f702811c93611690565b936fa9f746462d870fdf8a65dc1f90e061e502811c93611686565b936fd097f3bdfd2022b8845ad8f792aa582502811c9361167c565b936fe7159475a2c29b7443b29c7fa6e889d902811c93611672565b936ff3392b0822b70005940c7a398e4b70f302811c93611668565b936ff987a7253ac413176f2b074cf7815e5402811c9361165e565b936ffcbe86c7900a88aedcffc83b479aa3a402811c93611654565b936ffe5dee046a99a2a811c461f1969c305302811c9361164a565b926fff2ea16466c96a3843ec78b326b528610260801c9261163f565b926fff973b41fa98c081472e6896dfb254c00260801c92611636565b926fffcb9843d60f6159c9db58835c9266440260801c9261162d565b926fffe5caca7e10e4e61c3624eaa0941cd00260801c92611624565b926ffff2e50f5f656932ef12357cf3c7fdcc0260801c9261161b565b926ffff97272373d413259a46990580e213a0260801c92611612565b6001600160881b03600160801b611607565b6040516315e4079d60e11b8152600490fd5b816115da565b60001982820990828102928380841093039183830393600093146119e257600160401b92848411156119df57500990828211900360c01b910360401c1790565b80fd5b505090505060401c90565b600160801b91600019828409928260801b92838086109503948086039514611a6857848311156102485782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505080925015610248570490565b6000198282099082810292838084109303918383039360009314611ab657600160801b92848411156119df57500990828211900360801b910360801c1790565b505090505060801c90565b600160c01b91600019828409928260c01b92838086109503948086039514611a6857848311156102485782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b6000198282099082810292838084109303918383039360009314611b7c57600160c01b92848411156119df57500990828211900360401b910360c01c1790565b505090505060c01c90565b919082018092116103ff57565b92611b9d611431565b506060926000928115611c0957611bb48187611456565b80519096906001600160a01b0316158015611bea575b611bd357505050565b919350919450611be39350611c9a565b9192909190565b50611c018365ffffffffffff60408a015116611b87565b421015611bca565b9194909250611be39350611c9a565b93909192611c24611431565b506060936000938115611c8b57611c3b8188611456565b80519097906001600160a01b0316158015611c6c575b611c5b5750505050565b91939650919350611be394506121e2565b50611c838365ffffffffffff60408b015116611b87565b421015611c51565b9193509194611be394506121e2565b92919092611ca6611431565b506001600160a01b0384811690821610156121dc5792915b611cc6611431565b60015460609360009182907f0000000000000000000000000000000000000000000000000000000000000000871b6bffffffffffffffffffffffff1916825b828110611e5257505084516001600160a01b0316929150829050611dc3575b5050600080516020612a9f833981519152916080919495819760018060a01b0316600052600360205260406000209060018060a01b0316600052602052604060002060018060a01b0382511681549062ffffff60a01b602085015160a01b1665ffffffffffff60b81b604086015160b81b169161ffff60e81b606087015160e81b169360ff60f81b16171717179055611dc060405180926112a9565ba1565b15611dcf575b80611d24565b60e060049160405192838092633850c7bd851b82525afa908115611e475791600080516020612a9f83398151915293916080938291611e1b575b5061ffff166060830152915091611dc9565b61ffff9250611e38915060e03d8111610212576101fe818361140f565b50509493925050509190611e09565b6040513d84823e3d90fd5b898b62ffffff611e6184611358565b90549060031b1c16806040805193611e78856113df565b6001600160a01b03908116808652951660208501819052930152818310156121d85760405191602083019384526040830152606082015260608152611ebc816113c3565b51902060405190602082019060ff60f81b8252846021840152603583015260557fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54818401528252611f0c826113c3565b905190206001600160a01b0316803b611f29575b50600101611d05565b869060609160405163883bdbfd60e01b602082015289604482019160206024820152815480935260648101928280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639083915b81600784011061216a5794611fdd92849286975491818110612153575b81811061213a575b818110612120575b8b828210612106575b508181106111265781811061110c578181106110f257106110e4575003601f19810183528261140f565b602081519101855afa611fee61278e565b9061205f575b506001600160801b031686811161200d575b5050611f20565b919850945060019199509362ffffff6120258b611358565b90549060031b1c166040519161203a836113c3565b8252602082015265ffffffffffff421660408201528660608201529698903880612006565b9050612076919250602080825183010191016127ce565b9091906001600160a01b0361208a82612771565b5116906001600160a01b039061209f90612781565b511690036001600160a01b0381116120f25760201b640100000000600160c01b031680156120de5760e160a31b046001600160801b0390811690611ff4565b634e487b7160e01b89526012600452602489fd5b634e487b7160e01b89526011600452602489fd5b6001919463ffffffff856020931c1681520193018b611fb3565b92602060019163ffffffff8560401c168152019301611faa565b92602060019163ffffffff85831c168152019301611fa2565b92602060019163ffffffff85168152019301611f9a565b805463ffffffff8082168852602082811c821690890152604082811c821690890152818b1c81168b890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501948e9450600890920191600101611f7d565b8880fd5b91611cbe565b929390936121ee611431565b506000936001600160a01b03868116908216101561275457945b612210611431565b916060946000918283600154906bffffffffffffffffffffffff197f00000000000000000000000000000000000000000000000000000000000000008b1b16905b82811061242657505086516001600160a01b031692915082905061230b575b505050916080916040600080516020612a9f833981519152949697839960018060a01b031681526003602052209060018060a01b0316600052602052604060002060018060a01b0382511681549062ffffff60a01b602085015160a01b1665ffffffffffff60b81b604086015160b81b169161ffff60e81b606087015160e81b169360ff60f81b16171717179055611dc060405180926112a9565b60ff1690811592831590819461241d575b5015612270579060e060049260409594955193848092633850c7bd851b82525afa9182156124125783926123e7575b5061ffff918216606087018181529394612366575b50612270565b6101008110156123605701169081905283516001600160a01b031690813b15610248576000916024839260405194859384926332148f6760e01b845260048401525af18015610219576123bc575b808080612360565b600080516020612a9f83398151915293919650916123db6080936113fb565b600096919350916123b4565b909250612402915060e03d8111610212576101fe818361140f565b505094939250505091903861234b565b6040513d85823e3d90fd5b9050153861231c565b62ffffff61243382611358565b90549060031b1c168d60405190612449826113df565b6001600160a01b03908116808352908b1660208301819052604090920183905291818310156127505760405191602083019384526040830152606082015260608152612494816113c3565b51902060405190602082019060ff60f81b8252846021840152603583015260557fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b548184015282526124e4826113c3565b905190206001600160a01b0316803b612501575b50600101612251565b879060609160405163883bdbfd60e01b60208201528a604482019160206024820152815480935260648101928280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639083915b8160078401106126e257946125b1928492869754918181106121535781811061213a57818110612120578b82821061210657508181106111265781811061110c578181106110f257106110e4575003601f19810183528261140f565b602081519101855afa6125c261278e565b9061263d575b50866001600160801b038216116125e1575b50506124f8565b9095506001929c506001600160801b03919a50169362ffffff6126038d611358565b90549060031b1c1660405191612618836113c3565b8252602082015265ffffffffffff42166040820152876060820152989a9038806125da565b9050612654919250602080825183010191016127ce565b9091906001600160a01b0361266882612771565b5116906001600160a01b039061267d90612781565b511690036001600160a01b0381116126ce5760201b640100000000600160c01b031680156126ba5760e160a31b046001600160801b0316386125c8565b634e487b7160e01b8a52601260045260248afd5b634e487b7160e01b8a52601160045260248afd5b805463ffffffff8082168852602082811c821690890152604082811c821690890152818b1c81168b890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501948f9450600890920191600101612555565b8980fd5b612208565b67ffffffffffffffff8111610a555760051b60200190565b8051600110156113975760400190565b8051156113975760200190565b3d156127c9573d9067ffffffffffffffff8211610a5557604051916127bd601f8201601f19166020018461140f565b82523d6000602084013e565b606090565b919060408382031261024857825167ffffffffffffffff908181116102485784019082601f830112156102485781519161280783612759565b90612815604051928361140f565b838252602093848084019160051b83010191868311610248578501905b8282106128ac57505050948281015191821161024857019180601f8401121561024857825161286081612759565b9361286e604051958661140f565b818552838086019260051b820101928311610248578301905b828210612895575050505090565b8380916128a18461151f565b815201910190612887565b81518060060b8103610248578152908501908501612832565b91906000926040516128d6816113df565b60028152846020928383019260403685376128f081612781565b9563ffffffff8091168097528361290683612771565b5260405163883bdbfd60e01b878201908152602482018890529251604482018190526064820196919286905b89838310612a5757505050505061295381859603601f19810183528261140f565b51915afa61295f61278e565b9015612a45578161297692825183010191016127ce565b5061298a61298382612771565b5191612781565b5160060b9060060b0392667fffffffffffff1991667fffffffffffff851383861217612a1d5760060b9360060b8415612a315760001992811485841416612a1d5784810560020b948282129182612a0e575b50506129e6575050565b91929091627fffff1982146129fa57500190565b634e487b7160e01b81526011600452602490fd5b0760060b1515905038806129dc565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b82526012600452602482fd5b6040516303875aeb60e51b8152600490fd5b845182168a52988901988d98509093019260019190910190612932565b9092916001600160801b03916001600160a01b03908190811684811161172c578061170d9161150c56fea4f1f360d824552e10292fb28c429d3e58b8d91cb89604b82559507cf4d72ff6a2646970667358221220b045c25996e756cf44ea176f4cee58f3d14ec36b7bd54e1fa35ff8a4c41c169e64736f6c63430008120033";

export class UniswapPriceFeed__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    uniswapV3Factory_: string,
    twapInterval_: BigNumberish,
    poolUpdateInterval_: BigNumberish,
    registry_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapPriceFeed> {
    return super.deploy(
      uniswapV3Factory_,
      twapInterval_,
      poolUpdateInterval_,
      registry_,
      overrides || {}
    ) as Promise<UniswapPriceFeed>;
  }
  getDeployTransaction(
    uniswapV3Factory_: string,
    twapInterval_: BigNumberish,
    poolUpdateInterval_: BigNumberish,
    registry_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      uniswapV3Factory_,
      twapInterval_,
      poolUpdateInterval_,
      registry_,
      overrides || {}
    );
  }
  attach(address: string): UniswapPriceFeed {
    return super.attach(address) as UniswapPriceFeed;
  }
  connect(signer: Signer): UniswapPriceFeed__factory {
    return super.connect(signer) as UniswapPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapPriceFeedInterface {
    return new utils.Interface(_abi) as UniswapPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as UniswapPriceFeed;
  }
}
