/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BucketsFactory,
  BucketsFactoryInterface,
} from "../BucketsFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "contract IPTokensFactory",
        name: "_pTokensFactory",
        type: "address",
      },
      {
        internalType: "contract IDebtTokensFactory",
        name: "_debtTokensFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bucketImplementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bucketAddress",
        type: "address",
      },
    ],
    name: "BucketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "debtTokensFactory",
        type: "address",
      },
    ],
    name: "DebtTokensFactoryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pTokensFactory",
        type: "address",
      },
    ],
    name: "PTokensFactoryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "allBuckets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buckets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nameBucket",
            type: "string",
          },
          {
            internalType: "address",
            name: "positionManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "priceOracle",
            type: "address",
          },
          {
            internalType: "address",
            name: "dns",
            type: "address",
          },
          {
            internalType: "address",
            name: "reserve",
            type: "address",
          },
          {
            internalType: "address",
            name: "whiteBlackList",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "contract IERC20Metadata",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeBuffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawalFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveRate",
            type: "uint256",
          },
          {
            internalType: "contract ILiquidityMiningRewardDistributor",
            name: "liquidityMiningRewardDistributor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "liquidityMiningAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityMiningDeadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilizationDuration",
            type: "uint256",
          },
          {
            internalType: "contract IInterestRateStrategy",
            name: "interestRateStrategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerUser",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isReinvestToAaveEnabled",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "estimatedBar",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "estimatedLar",
            type: "uint128",
          },
          {
            internalType: "bytes",
            name: "barCalcParams",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "maxTotalDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct IBucketsFactory.CreateBucketParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "createBucket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "debtTokensFactory",
    outputs: [
      {
        internalType: "contract IDebtTokensFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pTokensFactory",
    outputs: [
      {
        internalType: "contract IPTokensFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDebtTokensFactory",
        name: "_debtTokensFactory",
        type: "address",
      },
    ],
    name: "setDebtTokensFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPTokensFactory",
        name: "_pTokensFactory",
        type: "address",
      },
    ],
    name: "setPTokensFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bucketImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040908082523462000338576080816200245680380380916200002582856200033d565b83398101031262000338576200003b8162000377565b6020808301519192916001600160a01b0380821691829003620003385785840151938185168095036200033857606062000076910162000377565b600080546001600160a01b03198082163390811784558a51919793949286167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a3813b15620002d057508316908186600154161760015588519381856024816301ffc9a760e01b94858252637965db0b60e01b60048301528d165afa9485156200024b578495620002ac575b508462000255575b84620001f4575b846200017c575b50505050156200016b578160025416176002556003541617600355608052516120af9081620003a782396080518181816102bd015281816107e401528181610f1801528181611370015261144d0152f35b845163044aa57560e41b8152600490fd5b819293945060248a51809581938252636401839b60e01b60048301525afa928315620001e95792620001b5575b5050388080806200011a565b620001d99250803d10620001e1575b620001d081836200033d565b8101906200038c565b3880620001a9565b503d620001c4565b8851903d90823e3d90fd5b8951818152630a96b04f60e31b600482015290945081816024818b5afa9081156200024b57849162000229575b509362000113565b620002449150823d8411620001e157620001d081836200033d565b3862000221565b8a513d86823e3d90fd5b89518181526304fc31a160e21b60048201529094508181602481895afa9081156200024b5784916200028a575b50936200010c565b620002a59150823d8411620001e157620001d081836200033d565b3862000282565b620002c8919550823d8411620001e157620001d081836200033d565b933862000104565b62461bcd60e51b815260048101839052603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200036157604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200033857565b90816020910312620003385751801515810362000338579056fe6102408060405260043610156200001557600080fd5b600090813560e01c90816301ffc9a714620016f4575080633659cfe614620015c2578063416f666e14620015975780635c60da1b146200156c578063691c919014620015415780636d1ac11814620013fd578063715018a6146200139f5780637b10399914620013585780638da5cb5b146200132f57806395a14c1e146200044f5780639b51fb0d1462000406578063f2645250146200026d578063f2fde38b146200019b5763f9776bcb14620000cb57600080fd5b34620001985780600319360112620001985760405180916004549081835260208093018092600483527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90835b8181106200017a575050508462000131910385620017ae565b60405193838594850191818652518092526040850193925b8281106200015957505050500390f35b83516001600160a01b03168552869550938101939281019260010162000149565b82546001600160a01b03168452928601926001928301920162000118565b80fd5b5034620001985760203660031901126200019857620001b962001752565b620001c36200188d565b6001600160a01b039081169081156200021957600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5034620001985760208060031936011262000402576004356001600160a01b038181169291839003620003fe578160449160405192838092632474521560e21b82528860048301523360248301527f0000000000000000000000000000000000000000000000000000000000000000165afa908115620003bf578491620003dc575b5015620003ca576040516301ffc9a760e01b81526304fc31a160e21b60048201528181602481865afa908115620003bf5784916200038b575b501562000379577fbf20ad9a53ccaab5319588cb8155368afa3ff6a073b513426bc7759cca6124739160025490806bffffffffffffffffffffffff60a01b831617600255846040519216178152a180f35b60405163044aa57560e41b8152600490fd5b620003b09150823d8411620003b7575b620003a78183620017ae565b810190620018e6565b3862000328565b503d6200039b565b6040513d86823e3d90fd5b60405163036be76f60e61b8152600490fd5b620003f79150823d8411620003b757620003a78183620017ae565b38620002ef565b8380fd5b5080fd5b5034620001985760203660031901126200019857600435906004548210156200019857602062000436836200183f565b905460405160039290921b1c6001600160a01b03168152f35b50346200019857600319602036820112620004025767ffffffffffffffff6004351162000402576102c09060043536030112620001985760405180610200526102c0810190811067ffffffffffffffff8211176200131b576040526004356004013567ffffffffffffffff8111620004025760043501366023820112156200040257620004e7903690602460048201359101620017ee565b6102005152620004fc6024600435016200176e565b6020610200510152620005146044600435016200176e565b60406102005101526200052c6064600435016200176e565b6060610200510152620005446084600435016200176e565b60806102005101526200055c60a4600435016200176e565b60a061020051015260c4600435013567ffffffffffffffff811162000402576004350136602382011215620004025760048101359067ffffffffffffffff82116200109d578160051b60405192620005b86020830185620017ae565b835260246020840191830101913683116200131757602401905b828210620012fc5750506102005160c001919091525060043560e401356001600160a01b0381168103620004025760e061020051015261010460043501356101006102005101526101246004350135610120610200510152610144600435013561014061020051015260018060a01b036101646004350135166101646004350135036200019857610164600435013561016061020051015261018460043501356101806102005101526101a460043501356101a06102005101526101c460043501356101c061020051015260018060a01b036101e46004350135166101e460043501350362000198576101e460043501356101e0610200510152610204600435013561020080510152610224600435013515156102246004350135036200019857610224600435013561022061020051015262000715610244600435016200182a565b6102406102005101526200072f610264600435016200182a565b61026061020051015267ffffffffffffffff6102846004350135116200019857366004356102848101350160230112156200019857620007823660048035610284810135019081013590602401620017ee565b6102806102005101526102a460043501356102a0610200510152604051632474521560e21b81527fc0fc8e4dc5cff6febdf550b80d566f654e2baf1a02ea1060208c2f8ab2dd1b63600482015233602482015260208160448160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115620010c9578291620012d8575b5015620003ca576002546102005160e001516040516306fdde0360e01b8152916001600160a01b0390811691849184916004918391165afa9182156200121b578392620012b5575b50600490620008aa602e60405180956d0283934b6b2bc10382a37b5b2b7160951b602083015262000899815180926020868601910162001900565b810103600e810186520184620017ae565b6102005160e001516040516395d89b4160e01b815292859184919082906001600160a01b03165afa908115620003bf57600492859262001295575b50620009226022604051809461502d60f01b602083015262000911815180926020868601910162001900565b8101036002810185520183620017ae565b6102005160e0015160405163313ce56760e01b81529360209185919082906001600160a01b03165afa91858315620011c3576200098395602095829562001271575b50604051633173d37360e11b81529687958694859360048501620019d3565b03925af18015620010c957826102205262001226575b506003546102005160e001516040516306fdde0360e01b8152916001600160a01b0390811691849184916004918391165afa9182156200121b578392620011f8575b5060049062000a2a60316040518095700283934b6b2bc102232b13a2a37b5b2b71607d1b602083015262000a19815180926020868601910162001900565b8101036011810186520184620017ae565b6102005160e001516040516395d89b4160e01b815292859184919082906001600160a01b03165afa908115620003bf576004928592620011cf575b5062000aa56025604051809464646562742d60d81b602083015262000a94815180926020868601910162001900565b8101036005810185520183620017ae565b6102005160e0015160405163313ce56760e01b81529360209185919082906001600160a01b03165afa91858315620011c35762000b069560209582956200118d575b506040516312d1710d60e11b81529687958694859360048501620019d3565b03925af18015620010c957826101805262001142575b5061020051808080518060c05260018060a01b0360208301511660a05260018060a01b0360408301511660018060a01b0360608401511660018060a01b0360808501511660018060a01b0360a08601511660c08601519060018060a01b0360e0880151169261010088015194610120890151966101408a0151986102a06101a06101808d61016060018060a01b03910151169d01519d01519d6101c08101516101005260018060a01b036101e0820151166101a05261020081015160e05261022081015115156101e0526001600160801b0361024082015116610140526001600160801b03610260820151166101c05261028081015161016052015160805260405180610120528061030081011067ffffffffffffffff610300830111176200112e5761030081016040525260018060a01b036102205116602061012051015260018060a01b036101805116604061012051015260a0516060610120510152608061012051015260a061012051015260c061012051015260e0610120510152610100610120510152610120805101526101406101205101526101606101205101526101806101205101526101a06101205101526101c06101205101526101e0610120510152610100516102006101205101526101a051610220610120510152610140516102406101205101526101c05161026061012051015260e0516102806101205101526101e0516102a0610120510152610160516102c06101205101526080516102e0610120510152604051632f6a25b160e21b6020820152604060248201528062000d7c61012051516103006064840152610364830190620019ac565b61012080516020908101516001600160a01b039081166084860152825160400151811660a4860152825160600151811660c4860152825160800151811660e4860152825160a001518116610104860152825160c001518116610124860152825160e00151166101448501529051610100015183830360631901610164850152805180845292820192910190855b8181106200110b57505061012080518101516001600160a01b03908116610184860152815161014001516101a4860152815161016001516101c4860152815161018001516101e486015281516101a00151811661020486015281516101c0015161022486015281516101e00151610244860152815161020001516102648601528151610220015116610284850152805161024001516001600160801b039081166102a486015281516102600151166102c4850152805161028001516102e485015280516102a001511515610304850152516102c001518383036063190161032485015262000f4c939262000eff925090620019ac565b610120516102e001516103448301526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016604483015203601f198101835282620017ae565b6040519061066f8083019083821067ffffffffffffffff831117620010f75791604062000f8c92859462001a0b86393081528160208201520190620019ac565b039082f08015620010ea57610220516001600160a01b0391821691163b156200040257604051630392892f60e61b9081815282600482015283816024818360018060a01b0361022051165af18015620003bf57620010d4575b50610180518391906001600160a01b03163b15620004025760405190815282600482015281816024818360018060a01b0361018051165af18015620010c957620010b1575b5050600454680100000000000000008110156200109d577fb6c68e6ddf2e861fdcbf21c7b4abd02f1bd11f289f1767edabc8b7cc05ae1db29162001077826001602094016004556200183f565b81546001600160a01b0360039290921b91821b19169083901b179055604051908152a180f35b634e487b7160e01b83526041600452602483fd5b620010bc9062001783565b620004025781386200102a565b6040513d84823e3d90fd5b620010e29093919362001783565b913862000fe5565b50604051903d90823e3d90fd5b634e487b7160e01b85526041600452602485fd5b82516001600160a01b031684528594506020938401939092019160010162000e09565b634e487b7160e01b8f52604160045260248ffd5b6020813d60201162001184575b816200115e60209383620017ae565b810103126200040257516001600160a01b03811681036200040257610180523862000b1c565b3d91506200114f565b620011b3919550863d8811620011bb575b620011aa8183620017ae565b81019062001991565b933862000ae7565b503d6200119e565b604051903d90823e3d90fd5b620011f09192503d8087833e620011e78183620017ae565b81019062001925565b903862000a65565b600491925062001213903d8086833e620011e78183620017ae565b9190620009db565b6040513d85823e3d90fd5b6020813d60201162001268575b816200124260209383620017ae565b810103126200040257516001600160a01b03811681036200040257610220523862000999565b3d915062001233565b6200128d919550863d8811620011bb57620011aa8183620017ae565b933862000964565b620012ad9192503d8087833e620011e78183620017ae565b9038620008e5565b6004919250620012d0903d8086833e620011e78183620017ae565b91906200085e565b620012f5915060203d602011620003b757620003a78183620017ae565b3862000816565b602080916200130b846200176e565b815201910190620005d2565b8480fd5b634e487b7160e01b82526041600452602482fd5b50346200019857806003193601126200019857546040516001600160a01b039091168152602090f35b503462000198578060031936011262000198576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346200019857806003193601126200019857620013bc6200188d565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034620001985760208060031936011262000402576004356001600160a01b038181169291839003620003fe578160449160405192838092632474521560e21b82528860048301523360248301527f0000000000000000000000000000000000000000000000000000000000000000165afa908115620003bf5784916200151f575b5015620003ca576040516301ffc9a760e01b8152630a96b04f60e31b60048201528181602481865afa908115620003bf578491620014fd575b50156200037957600380546001600160a01b031916831790556040519182527f4da9765e0bd8c8b212fc7cfa048627b4c29d82b062e470f643096896d987540191a180f35b620015189150823d8411620003b757620003a78183620017ae565b38620014b8565b6200153a9150823d8411620003b757620003a78183620017ae565b386200147f565b503462000198578060031936011262000198576002546040516001600160a01b039091168152602090f35b503462000198578060031936011262000198576001546040516001600160a01b039091168152602090f35b503462000198578060031936011262000198576003546040516001600160a01b039091168152602090f35b5034620001985760203660031901126200019857620015e062001752565b6040516301ffc9a760e01b8152636401839b60e01b60048201526001600160a01b0382169190602081602481865afa908115620003bf578491620016d1575b50156200037957620016306200188d565b3b156200167057600180546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b6064820152608490fd5b620016ed915060203d8111620003b757620003a78183620017ae565b386200161f565b90503462000402576020366003190112620004025760043563ffffffff60e01b81168091036200174e57602092506313e9760960e01b81149081156200173c575b5015158152f35b6301ffc9a760e01b1490503862001735565b8280fd5b600435906001600160a01b03821682036200176957565b600080fd5b35906001600160a01b03821682036200176957565b67ffffffffffffffff81116200179857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176200179857604052565b67ffffffffffffffff81116200179857601f01601f191660200190565b929192620017fc82620017d1565b916200180c6040519384620017ae565b82948184528183011162001769578281602093846000960137010152565b35906001600160801b03821682036200176957565b600454811015620018775760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b03163303620018a257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b908160209103126200176957518015158103620017695790565b60005b838110620019145750506000910152565b818101518382015260200162001903565b602081830312620017695780519067ffffffffffffffff821162001769570181601f82011215620017695780516200195d81620017d1565b926200196d6040519485620017ae565b8184526020828401011162001769576200198e916020808501910162001900565b90565b9081602091031262001769575160ff81168103620017695790565b90602091620019c78151809281855285808601910162001900565b601f01601f1916010190565b9162001a0360ff91620019f4604094979697606087526060870190620019ac565b908582036020870152620019ac565b941691015256fe608060409080825261066f80380380916100198285610350565b8339810190828183031261034b5761003081610373565b6020828101516001600160401b039391929184821161034b57019084601f8301121561034b5781519161006283610387565b9261006f88519485610350565b8084528484019685828401011161034b57868561008c93016103a2565b803b156102f9578551635c60da1b60e01b80825292916001600160a01b0316908481600481855afa9081156102ee576000916102b9575b503b1561025c577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b03191682179055865192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a2825115801590610254575b610142575b87516101f690816104798239f35b6004848693819382525afa9182156102495760009261020f575b5085519360608501908111858210176101f9578652602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c83850152660819985a5b195960ca1b84870152516101e3946000918291845af4903d156101f0573d6101c781610387565b906101d488519283610350565b8152600081943d92013e6103c5565b5038808080808080610134565b606092506103c5565b634e487b7160e01b600052604160045260246000fd5b90918382813d8311610242575b6102268183610350565b8101031261023f575061023890610373565b903861015c565b80fd5b503d61021c565b86513d6000823e3d90fd5b50600061012f565b865162461bcd60e51b815260048101859052603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b908582813d83116102e7575b6102cf8183610350565b8101031261023f57506102e190610373565b386100c3565b503d6102c5565b88513d6000823e3d90fd5b855162461bcd60e51b815260048101849052602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176101f957604052565b51906001600160a01b038216820361034b57565b6001600160401b0381116101f957601f01601f191660200190565b60005b8381106103b55750506000910152565b81810151838201526020016103a5565b9192901561042757508151156103d9575090565b3b156103e25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561043a5750805190602001fd5b6044604051809262461bcd60e51b82526020600483015261046a81518092816024860152602086860191016103a2565b601f01601f19168101030190fdfe608080604052366100c4577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b857600091610060575b5061015b565b6020903d82116100b0575b601f8201601f1916810167ffffffffffffffff81118282101761009c5761009693506040520161017a565b3861005a565b634e487b7160e01b84526041600452602484fd5b3d915061006b565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b85760009161011d575061015b565b60203d8111610154575b601f8101601f1916820167ffffffffffffffff81118382101761009c5761009693506040528101906101a1565b503d610127565b6000808092368280378136915af43d82803e15610176573d90f35b3d90fd5b602090607f19011261019c576080516001600160a01b038116810361019c5790565b600080fd5b9081602091031261019c57516001600160a01b038116810361019c579056fea2646970667358221220906e70dfc3e25db0371b9dd68435d657e2dba67c04d60c8925c269032b42667c64736f6c63430008120033a26469706673582212200dd321e178ba743d9fdb6908bd3278ffa67df4372a718d19ddd46b638f45e55764736f6c63430008120033";

export class BucketsFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _registry: string,
    _pTokensFactory: string,
    _debtTokensFactory: string,
    _bucketImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BucketsFactory> {
    return super.deploy(
      _registry,
      _pTokensFactory,
      _debtTokensFactory,
      _bucketImplementation,
      overrides || {}
    ) as Promise<BucketsFactory>;
  }
  getDeployTransaction(
    _registry: string,
    _pTokensFactory: string,
    _debtTokensFactory: string,
    _bucketImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registry,
      _pTokensFactory,
      _debtTokensFactory,
      _bucketImplementation,
      overrides || {}
    );
  }
  attach(address: string): BucketsFactory {
    return super.attach(address) as BucketsFactory;
  }
  connect(signer: Signer): BucketsFactory__factory {
    return super.connect(signer) as BucketsFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BucketsFactoryInterface {
    return new utils.Interface(_abi) as BucketsFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BucketsFactory {
    return new Contract(address, _abi, signerOrProvider) as BucketsFactory;
  }
}
