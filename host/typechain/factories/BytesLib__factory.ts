/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BytesLib, BytesLibInterface } from "../BytesLib";

const _abi = [
  {
    inputs: [],
    name: "ToAddressOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ToAddressOverflow",
    type: "error",
  },
];

const _bytecode =
  "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122031509311b6441d8af3ac19e0f7074c2d528ffdadff3da81a60000c2201e7e7ec64736f6c63430008120033";

export class BytesLib__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BytesLib> {
    return super.deploy(overrides || {}) as Promise<BytesLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BytesLib {
    return super.attach(address) as BytesLib;
  }
  connect(signer: Signer): BytesLib__factory {
    return super.connect(signer) as BytesLib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BytesLibInterface {
    return new utils.Interface(_abi) as BytesLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BytesLib {
    return new Contract(address, _abi, signerOrProvider) as BytesLib;
  }
}
