/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ITreasuryStorage,
  ITreasuryStorageInterface,
} from "../ITreasuryStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFromTreasury",
    type: "event",
  },
  {
    inputs: [],
    name: "initialTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "spenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPercentPerTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTimeBetweenTransfers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeframeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountDuringTimeframe",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasuryStorage.SpendingLimits",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITreasuryStorage__factory {
  static readonly abi = _abi;
  static createInterface(): ITreasuryStorageInterface {
    return new utils.Interface(_abi) as ITreasuryStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITreasuryStorage {
    return new Contract(address, _abi, signerOrProvider) as ITreasuryStorage;
  }
}
